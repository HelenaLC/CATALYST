on:
  push:
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 8 * * 5'

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.bioc }} - ${{ matrix.config.image }})

    strategy:
      fail-fast: false
      matrix:
        config:
        #- { os: ubuntu-latest, r: 'devel', bioc: 'devel', cont: "bioconductor/bioconductor_docker:devel", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
        - { os: ubuntu-latest, bioc: 'devel'}
        - { os: windows-latest, r: 'devel', bioc: 'devel'}
        - { os: macOS-latest, r: 'devel', bioc: 'devel'}
        #- { os: ubuntu-latest, r: '4.2', bioc: '3.16', cont: "bioconductor/bioconductor_docker:RELEASE_3_16", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
        #- { os: windows-latest, r: '4.2', bioc: '3.16'}
        #- { os: macOS-latest, r: '4.2', bioc: '3.16'}
        #- { os: ubuntu-latest, r: '4.2', bioc: 'devel', cont: "bioconductor/bioconductor_docker:devel", rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest" }
        #- { os: windows-latest, r: '4.2', bioc: 'devel'}
        #- { os: macOS-latest, r: '4.2', bioc: 'devel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up R and install BiocManager
        uses: grimbough/bioc-actions/setup-bioc@v1
        if: matrix.config.image == null
        with:
          bioc-version: ${{ matrix.config.bioc }}

      - name: Set up pandoc
        uses: r-lib/actions/setup-pandoc@v2
        if: matrix.config.image == null

      - name: Install windows dependencies
        if: runner.os == 'Windows'
        run: choco install curl
          
      - name: Install remotes
        run: |
          install.packages('remotes')
          install.packages('RCurl')
        shell: Rscript {0}
        
      - name: Install rmarkdown
        run: |
          install.packages('rmarkdown')
          install.packages('BiocManager')
          BiocManager::install("BiocStyle")
        shell: Rscript {0}
        
      - name: Set BiocManager version
        if: matrix.config.image == null
        run: |
          install.packages('BiocManager')
          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE)
        shell: Rscript {0}

      - name: Query dependencies
        run: |
          saveRDS(remotes::dev_package_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories())), 'depends.Rds', version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows' && matrix.config.image == null
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
          sudo apt-get update && sudo apt-get -y install libcurl4-openssl-dev
          sudo apt-get update && sudo apt-get -y install libmagick++-dev
      - name: Install dependencies
        run: |
          local_deps <- remotes::local_package_deps(dependencies = TRUE)
          deps <- remotes::dev_package_deps(dependencies = TRUE, repos = BiocManager::repositories())
          BiocManager::install(local_deps[local_deps %in% deps$package[deps$diff != 0]], Ncpu = 2L)
          remotes::install_cran('rcmdcheck', Ncpu = 2L)
          BiocManager::install(c("magick","DelayedMatrixStats"))
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: BiocCheck
        run: |
          BiocManager::install("BiocCheck")
          BiocCheck::BiocCheck(".")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-bioc-${{ matrix.config.bioc }}-results
          path: check