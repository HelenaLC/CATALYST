% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/dbFrame-methods.R
\name{dbFrame-methods}
\alias{dbFrame-methods}
\alias{bc_ids}
\alias{deltas}
\alias{normed_bcs}
\alias{mhl_dists}
\alias{sep_cutoffs}
\alias{mhl_cutoff}
\alias{counts}
\alias{yields}
\alias{exprs,dbFrame-method}
\alias{bc_key}
\alias{sep_cutoffs<-}
\alias{mhl_cutoff<-}
\alias{bc_key,dbFrame-method}
\alias{bc_ids,dbFrame-method}
\alias{deltas,dbFrame-method}
\alias{normed_bcs,dbFrame-method}
\alias{mhl_dists,dbFrame-method}
\alias{sep_cutoffs,dbFrame-method}
\alias{mhl_cutoff,dbFrame-method}
\alias{counts,dbFrame-method}
\alias{yields,dbFrame-method}
\alias{mhl_cutoff<-,dbFrame,numeric-method}
\alias{mhl_cutoff<-,dbFrame,ANY-method}
\alias{sep_cutoffs<-,dbFrame,numeric-method}
\alias{sep_cutoffs<-,dbFrame,ANY-method}
\title{Extraction and replacement methods for objects of class \code{dbFrame}}
\usage{
bc_key(x)

bc_ids(x)

deltas(x)

normed_bcs(x)

mhl_dists(x)

sep_cutoffs(x)

mhl_cutoff(x)

counts(x)

yields(x)

\S4method{exprs}{dbFrame}(object)

\S4method{bc_key}{dbFrame}(x)

\S4method{bc_ids}{dbFrame}(x)

\S4method{deltas}{dbFrame}(x)

\S4method{normed_bcs}{dbFrame}(x)

\S4method{mhl_dists}{dbFrame}(x)

\S4method{sep_cutoffs}{dbFrame}(x)

\S4method{mhl_cutoff}{dbFrame}(x)

\S4method{counts}{dbFrame}(x)

\S4method{yields}{dbFrame}(x)

\S4method{mhl_cutoff}{dbFrame,numeric}(x) <- value

\S4method{mhl_cutoff}{dbFrame,ANY}(x) <- value

\S4method{sep_cutoffs}{dbFrame,numeric}(x) <- value

\S4method{sep_cutoffs}{dbFrame,ANY}(x) <- value
}
\arguments{
\item{x, object}{a \code{\link{dbFrame}}.}

\item{value}{the replacement value.}
}
\value{
\describe{
\item{\code{exprs}}{extracts the raw data intensities.}
\item{\code{bc_key}}{extracts the barcoding scheme.}
\item{\code{bc_ids}}{extracts currently made event assignments.}
\item{\code{deltas}}{extracts barcode separations computed from normalized 
                     intensities. \code{sep_cutoffs} apply to these values 
                     (see \code{\link{applyCutoffs}}).}
\item{\code{normed_bcs}}{extracts normalized barcode intensities 
                         (see \code{\link{assignPrelim}}).}
\item{\code{sep_cutoffs}, \code{sep_cutoffs<-}}{extracts or replaces 
separation cutoffs. If option \code{sep_cutoffs} is not specified, these will
be used by \code{\link{applyCutoffs}}. Replacement value must be a non-
negative numeric with length one or same length as the number of barcodes.}
\item{\code{mhl_cutoff}, \code{mhl_cutoff<-}}{extracts or replaces the 
Mahalanobis distance threshold above which events are to be unassigned.
Replacement value must be a single non-negative and non-zero numeric.}
\item{\code{counts}}{extract the counts matrix (see \code{\link{dbFrame}}).}
\item{\code{yields}}{extract the yields matrix (see \code{\link{dbFrame}}).}
}
}
\description{
Methods for replacing and accessing slots in a \code{\link{dbFrame}}.
}
\examples{
data(sample_ff, sample_key)
re <- assignPrelim(x = sample_ff, y = sample_key)

# set global cutoff parameter
sep_cutoffs(re) <- 0.4
re <- applyCutoffs(x = re)

# subset a specific population, e.g. A1: 111000
a1 <- bc_ids(re) == "A1"
head(exprs(sample_ff[a1, ]))

# subset unassigned events
unassigned <- bc_ids(re) == 0
head(exprs(sample_ff[unassigned, ]))
}
\author{
Helena Lucia Crowell \email{helena.crowell@uzh.ch}
}
